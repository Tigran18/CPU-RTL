$date
	Tue Jan 28 22:30:15 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module CPU_tb $end
$scope module u_CPU $end
$var wire 1 ! clk $end
$var wire 1 " cs $end
$var wire 8 # instruction [7:0] $end
$var wire 1 $ reset $end
$var wire 1 % we $end
$var wire 8 & result [7:0] $end
$var wire 8 ' data_out [7:0] $end
$var reg 8 ( data_in [7:0] $end
$var reg 4 ) programm_counter [3:0] $end
$var reg 8 * reg1 [7:0] $end
$var reg 8 + reg2 [7:0] $end
$var reg 8 , reg3 [7:0] $end
$var reg 8 - reg4 [7:0] $end
$scope module u_ALU $end
$var wire 1 " cs $end
$var wire 8 . data1 [7:0] $end
$var wire 8 / data2 [7:0] $end
$var wire 2 0 opcode [1:0] $end
$var reg 8 1 result [7:0] $end
$upscope $end
$scope module u_SRAM $end
$var wire 1 " CS $end
$var wire 1 % WE $end
$var wire 4 2 addr [3:0] $end
$var wire 1 ! clk $end
$var wire 8 3 data_in [7:0] $end
$var wire 8 4 instruction [7:0] $end
$var reg 8 5 data_out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#42
$dumpvars
bx 5
bx 4
bx 3
b0 2
bx 1
bz 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
bx (
bx '
bx &
z%
0$
bz #
1"
0!
$end
