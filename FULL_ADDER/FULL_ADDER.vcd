$date
	Tue Jan 28 22:55:52 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module FA_tb $end
$scope module u_fa $end
$var wire 8 ! a [7:0] $end
$var wire 8 " b [7:0] $end
$var wire 1 # cin $end
$var wire 1 $ cout $end
$var wire 9 % s [8:0] $end
$var wire 8 & carry [7:0] $end
$scope begin adder[0] $end
$scope begin genblk2 $end
$scope module u_fa $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 # cin $end
$var wire 1 ) cout $end
$var wire 1 * s $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder[1] $end
$scope begin genblk3 $end
$scope module u_fa $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - cin $end
$var wire 1 . cout $end
$var wire 1 / s $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder[2] $end
$scope begin genblk3 $end
$scope module u_fa $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 cin $end
$var wire 1 3 cout $end
$var wire 1 4 s $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder[3] $end
$scope begin genblk3 $end
$scope module u_fa $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 cin $end
$var wire 1 8 cout $end
$var wire 1 9 s $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder[4] $end
$scope begin genblk3 $end
$scope module u_fa $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < cin $end
$var wire 1 = cout $end
$var wire 1 > s $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder[5] $end
$scope begin genblk3 $end
$scope module u_fa $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 A cin $end
$var wire 1 B cout $end
$var wire 1 C s $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder[6] $end
$scope begin genblk3 $end
$scope module u_fa $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F cin $end
$var wire 1 G cout $end
$var wire 1 H s $end
$upscope $end
$upscope $end
$upscope $end
$scope begin adder[7] $end
$scope begin genblk3 $end
$scope module u_fa $end
$var wire 1 I a $end
$var wire 1 J b $end
$var wire 1 K cin $end
$var wire 1 L cout $end
$var wire 1 M s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
1*
0)
1(
0'
b0 &
b1 %
z$
0#
b1 "
b0 !
$end
#10
0*
b10 %
1/
0(
1,
b10 "
#20
b11 %
1*
1(
b11 "
#30
0*
0/
b100 %
14
0(
0,
11
b100 "
#40
b101 %
1*
1(
b101 "
#50
0*
b110 %
1/
0(
1,
b110 "
#60
b111 %
1*
1(
b111 "
#70
0*
0/
04
b1000 %
19
0(
0,
01
16
b1000 "
#80
b1001 %
1*
1'
b1 !
#90
1/
1-
0*
b1 &
1)
b10 %
09
1(
06
b1 "
#100
04
02
0-
0.
1*
b0 &
0)
b11 %
1/
0(
1,
b10 "
#110
14
12
1.
0/
1-
b100 %
0*
b11 &
1)
1(
b11 "
#120
09
02
07
0-
0.
03
1*
b0 &
0)
0/
b101 %
14
0(
0,
11
b100 "
#130
1/
1-
b110 %
0*
b1 &
1)
1(
b101 "
#140
09
07
03
14
02
0-
0.
1*
b0 &
0)
b111 %
1/
0(
1,
b110 "
#150
19
17
13
04
12
1.
0/
1-
b1000 %
0*
b111 &
1)
1(
b111 "
#160
0>
02
07
0<
0-
0.
03
08
1*
b0 &
0)
0/
04
b1001 %
19
0(
0,
01
16
b1000 "
#170
0*
b1010 %
1/
0'
1+
b10 !
#180
1*
b11 %
09
1(
06
b1 "
#190
14
12
0*
b100 %
0/
b10 &
1.
0(
1,
b10 "
#200
b101 %
1*
1(
b11 "
#210
09
07
02
03
0*
1/
b0 &
0.
b110 %
14
0(
0,
11
b100 "
#220
b111 %
1*
1(
b101 "
#230
19
17
13
04
12
0*
b1000 %
0/
b110 &
1.
0(
1,
b110 "
#240
b1001 %
1*
1(
b111 "
#250
0>
07
0<
02
03
08
0*
1/
b0 &
0.
04
b1010 %
19
0(
0,
01
16
b1000 "
#260
b1011 %
1*
1'
b11 !
#270
14
12
1.
0/
1-
0*
b11 &
1)
b100 %
09
1(
06
b1 "
#280
0-
1*
b10 &
0)
b101 %
0/
0(
1,
b10 "
#290
1/
1-
b110 %
0*
b11 &
1)
1(
b11 "
#300
09
07
0-
02
03
1*
0)
1/
b0 &
0.
b111 %
14
0(
0,
11
b100 "
#310
19
17
13
04
12
1.
0/
1-
b1000 %
0*
b111 &
1)
1(
b101 "
#320
0-
1*
b110 &
0)
b1001 %
0/
0(
1,
b110 "
#330
1/
1-
b1010 %
0*
b111 &
1)
1(
b111 "
#340
0>
07
0<
0-
02
03
08
1*
0)
1/
b0 &
0.
04
b1011 %
19
0(
0,
01
16
b1000 "
#350
0*
0/
b1100 %
14
0'
0+
10
b100 !
#360
1*
b101 %
09
1(
06
b1 "
#370
0*
b110 %
1/
0(
1,
b10 "
#380
b111 %
1*
1(
b11 "
#390
19
17
0*
0/
b1000 %
04
b100 &
13
0(
0,
11
b100 "
#400
b1001 %
1*
1(
b101 "
#410
0*
b1010 %
1/
0(
1,
b110 "
#420
b1011 %
1*
1(
b111 "
#430
0>
0<
07
08
0*
0/
14
b0 &
03
b1100 %
19
0(
0,
01
16
b1000 "
#440
b1101 %
1*
1'
b101 !
#450
1/
1-
0*
b1 &
1)
b110 %
09
1(
06
b1 "
#460
09
07
03
14
02
0-
0.
1*
b0 &
0)
b111 %
1/
0(
1,
b10 "
#470
19
17
13
04
12
1.
0/
1-
b1000 %
0*
b111 &
1)
1(
b11 "
#480
02
0-
0.
1*
b100 &
0)
0/
b1001 %
04
0(
0,
11
b100 "
#490
1/
1-
b1010 %
0*
b101 &
1)
1(
b101 "
#500
04
02
0-
0.
1*
b100 &
0)
b1011 %
1/
0(
1,
b110 "
#510
14
12
1.
0/
1-
b1100 %
0*
b111 &
1)
1(
b111 "
#520
0>
02
0<
0-
0.
07
08
1*
0)
0/
14
b0 &
03
b1101 %
19
0(
0,
01
16
b1000 "
#530
0*
b1110 %
1/
0'
1+
b110 !
#540
1*
b111 %
09
1(
06
b1 "
#550
19
17
13
04
12
0*
b1000 %
0/
b110 &
1.
0(
1,
b10 "
#560
b1001 %
1*
1(
b11 "
#570
02
0*
1/
b100 &
0.
b1010 %
04
0(
0,
11
b100 "
#580
b1011 %
1*
1(
b101 "
#590
14
12
0*
b1100 %
0/
b110 &
1.
0(
1,
b110 "
#600
b1101 %
1*
1(
b111 "
#610
0>
0<
02
07
08
0*
1/
0.
14
b0 &
03
b1110 %
19
0(
0,
01
16
b1000 "
#620
b1111 %
1*
1'
b111 !
#630
17
13
04
12
1.
0/
1-
0*
b111 &
1)
b1000 %
19
1(
06
b1 "
#640
0-
1*
b110 &
0)
b1001 %
0/
0(
1,
b10 "
#650
1/
1-
b1010 %
0*
b111 &
1)
1(
b11 "
#660
0-
02
1*
0)
1/
b100 &
0.
b1011 %
04
0(
0,
11
b100 "
#670
14
12
1.
0/
1-
b1100 %
0*
b111 &
1)
1(
b101 "
#680
0-
1*
b110 &
0)
b1101 %
0/
0(
1,
b110 "
#690
1/
1-
b1110 %
0*
b111 &
1)
1(
b111 "
#700
0>
0<
0-
02
07
08
1*
0)
1/
0.
14
b0 &
03
b1111 %
19
0(
0,
01
16
b1000 "
#710
1>
1<
0*
0/
04
b10000 %
09
b1000 &
18
0'
0+
00
15
b1000 !
#720
0>
0<
b1000 %
19
b0 &
08
06
b0 "
